exit
require 'world'
exit
require 'world'
world_one = World.new
world_one = World.new(5, 5)
world_two = World.new(5, 5)
world_one
world_two
world_one.neighbors_of 1, 1
world_two.neighbors_of 1, 2
world_two.neighbors_of 1, 1
world_one.tick
exit
w = World.new(5, 5)
require 'world'
w = World.new(5, 5)
w.neighbors_of 1, 1
w.neighbors_of 0, 0
cell = [0, 4]
w
w.cells[0, 4]
w.cells[0][4]
w.cells[0][6]
w.cells[0][5\
]
require 'math'
Math
exit
require 'World'
world = World.new
world = World.new(5,5)
world.cells[0][0]
exit
require 'world'
require 'World'
exit
require 'world'
world = World.new(5,5)
cellexit
exit
require 'world'
world = World.new(5, 5)
cell = world.cells[0][0]
cell
cell.revive_at?exit
require 'World'
require 'World'
exit
require 'World'
exit
require 'World'
world = World.new(5,5)
world
world.cells
exit
require 'World'
world = World.new(5, 5)
world.generate_cells
exit
require 'World'
exit
require 'World'
alive_cell = AliveCell.new(1,1)
alive_cell
AliveCell
AliveCell.to_s
alive_cell.to_s
exit
require 'World'
alive_cell = AliveCell(1,1)
alive_cell = AliveCell.new(1,1)
alive_cell
p alive_cell
puts alive_cell
alive_cell.to_s
exit
require 'World'
world = World.new(5,5)
world.generate_cells
world.cells
exit
require 'world'
world = World.new(5, 5)
world.generate_cells
world.cells
exit
require 'world'
world = World.new(5, 5)
world.generate_cells
exit 
require 'world'
world = World.new(5, 5)
world.generate_cells
world.cells
world
cells
world.cells
world.cells[0][0]
exit
require 'world'
world = World.new(5, 5)
world.generate_cells
world.get_cell(1, 1)
p world
exit
require 'world'
world = World.new(5, 5)
world.generate_cells
world
world.neighbors_of(1, 1)
cells
world.cells
world.cells[0][0].x
exit
require 'world'
world = World.new
world = World.new(5, 5)
world.generate_cells
cells = world.cells
cells[0][0]
world.neighbors_of(1, 1)
cell = cells[0][0]
cell.to_s
exit
require 'world'
world = World.new
world = World.new(5, 5)
world.generate_cells
world.cells
cells = world.cells
cell = cells[0][0]
cell = cell.to_s
exit 
require 'world'
exit
require 'world'
exit
require 'world'
exit
require 'world'
exit
require 'world'
world = World.new
world = World.new(5, 5)
world
world.get_cell(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.cells
exit
require 'world'
exit
require 'world'
exit
require 'world'
world = World.new(5, 5)
world.generate_cells
world.neighbors_of(1, 1)
exit
require 'World'
require 'world'
world = World.new(5, 5)
world
world.neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.alive_neighbors_of(1,1)
exit
require 'world'
world = World.new(5, 5)
world.alive_neighbors_of(1, 1)
world.neighbors_of(1, 1)
world.cells
world.cells[1][1] == AliveCell
exit
require 'world'
exit
require 'world'
world = World.new(5, 5)
world.neighbors_of(1, 1)
neighbors = world.neighbors_of(1, 1)
neighbors
neighbors[1][1]
cell = neighbors[1][1]
cell
exit
require 'world'
world = World.new(1, 1)
world = World.new(5, 5)
world
world.neighbors_of(1, 1)
neighbors = world.neighbors_of(1, 1)
neighbors
neighbors[1][1]
neighbors[1][1].to_s
neighbors[1]
neighbors[1].to_s
exit
require 'world'
world = World.new(5, 5)
world.cells
world.tick
exit
require 'world'
exit
require 'world'
exit
require 'world'
exit
require 'world'
exit
require 'world'
exit
require 'world'
world = World.new(5, 5)
world
cell = world.cells[0][0]
cell.status
exit
exit
require 'world'
world = World.new(5, 5)
world
cell = world.cells[0][0]
cell.get_alive_neighbors
exit
require 'world'
world = World.new(5, 5)
world
cell = world.cells[0][0]
cell.get_alive_neighbors
exit
world = World.new(5, 5)
require 'world'
world = World.new(5, 5)
world
world.tick
exit
require 'world'
world = World.new(5, 5)
world.tick
exit
require 'world'
world = World.new(5, 5)
world.tick
exit
require 'world'
world = World.new(5, 5)
world.tick
exit
require 'world'
world = World.new
world = World.new(5, 5)
world.tick
exit
require 'world'
world = World.new(5, 5)
world.tick
world.cells
world.cells[0][0]
world = World.new(5, 5)
world
cell = world.cells[0][0]
cell.alive_next_generation?
exit
require 'world'
world = World.new(5, 5)
world
cell = world.cells[0][0]
cell.alive_next_generation?
exit
require 'world'
world = World.new(5, 5)
world.cells
world.tick
next_generation
exit
require 'world'
world = World.new(5, 5)
world
world.tick
exit
require 'world'
exit
world = World.new(5, 5)
exit
require 'world'
require 'World;\
require 'World'\
require 'World'\
exit\
'
require 'World'
world = World.new(5, 5)
world
world.tick
exit
require 'world'
require 'World'
world = World.new(5, 5)
world
world = World.new(5, 5)
world
exit
require 'World;\
'
require 'World'
world = World.new(5, 5)
world
world.tick
exit
require 'World'
world = World.new(5, 5)
world
world.tick
exit
require 'World'
world = World.new(5, 5)
world
world.tick
exit
require 'world'
world = World.new(5, 5)
world
world.next_generation
world.tick
exit
require 'world'
world = World.new(5, 5)
world
world.tick
exit
require 'world'
world = World.new(5, 5)
world.tick
exit
require 'world'
world = World.new(5, 5)
world.tick
exit
require 'world'
world = World.new(5, 5)
world
world.tick2
exit
require 'world'
world = World.new(5, 5)
world.tick2
exit
array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
exit
require 'world'
world = World.new(10, 10)
world.empty?
exit
test = false
test? = false
test? :== false
test? == false
exit
require 'world'
world = World.new(5, 5)
world.generate_random_board
exit
require 'world'
world = World.new(5, 5)
world
world.generate_random_board
exit
require 'world'
world = World.new(5, 5)
world.generate_random_board
exit
require 'world'
world = World.new(5, 5)
world.generate_random_board
irb
require 'world'
exit
exit
require 'world'
world = World.new(5, 5)
world.generate_random_board
world.cells
exit
require 'world'
world = World.new(1, 1)
world = World.new(5, 5)
world.generate_random_board
cell = world.cells[0][0]
cell
cell.to_s
exit
require 'world'
world = World.new(5, 5)
world.generate_random_board
world.display_board
p world.display_board
pp world.display_board
exit
require 'world'
world = World.new(5, 5)
world
world.generate_dead_board
world.cell_objects
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.cell_objects
world.cells
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.cells
world.tick
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.tick
world.cells
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.tick
world.cells
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.tick
world.cells
exit
require 'world;\
'
require 'world'
world = World.new(5, 5)
world
world.generate_dead_board
world.tick
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.tick
world.neighbors_of(1, 1)
world.cells
world = World.new(5, 5)
world.generate_dead_board
world.cells
world.cells
world.cell_objects
world.neighbors_of(1, 1)
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.cells
world.cell_objects
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
cell = world.cells[1][1]
cell.alive?
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_cells
world.generate_dead_board
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board(1, 1)
world.generate_dead_board
world.alive_neighbors_of(1, 1)
exit
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.alive_neighbors_of(1, 1)
world.generate_random_board
world.cells
exit
require 'world\
'
require 'world'
world = World.new(5, 5)
world.generate_dead_board
world.alive_neighbors_of(1, 1)
world.tick
exit
